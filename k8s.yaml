---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: laiton-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: laiton-storage
  local:
    path: /storage/laitondata
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - jamovi4jonathon
---
apiVersion: v1
kind: Service
metadata:
  labels:
  name: laitonserver
spec:
  selector:
    app: laitonserver
  ports:
    - name: server
      port: 8080
      protocol: TCP
    - name: data
      port: 80
      protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: laitonserver-pvc
spec:
  storageClassName: laiton-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laitonserver
  labels:
    app: laitonserver
spec:
  selector:
    matchLabels:
      app: laitonserver
  template:
    metadata:
      labels:
        app: laitonserver
    spec:
      containers:
        - name: laitonserver
          image: scienceboy1996/laitonserver
          env:
            - name: SERVER_LOG_PATH
              value: /data
          volumeMounts:
            - mountPath: "/data"
              name: storage
          resources:
            requests:
              cpu: "100m"
        - name: nginx
          image: nginx
          volumeMounts:
            - mountPath: "/usr/share/nginx/html/data"
              name: storage
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          resources:
            requests:
              cpu: "100m"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: laitonserver-pvc
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |-
      server {
          listen       80;
          listen  [::]:80;
          server_name  localhost;

          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
              autoindex on;
          }
      }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: laiton-ingress
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  #ingressClassName: nginx-example
  rules:
  - host: laitonweb.site
    http:
      paths:
      - path: /teamspirit
        pathType: Prefix
        backend:
          service:
            name: laitonserver
            port:
              number: 8080
      - path: /data
        pathType: Prefix
        backend:
          service:
            name: laitonserver
            port:
              number: 80
---
